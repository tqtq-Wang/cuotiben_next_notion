.main {
  max-width: 1000px;
  margin: 0 auto;
  padding: 2rem;
}

.header {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 2rem;
}

.backButton {
  padding: 0.5rem 1rem;
  background: #0070f3;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.backButton:hover {
  background: #0051a2;
}

.content {
  background: white;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  padding: 2rem;
  line-height: 1.8; /* 提高行高 */
}

.section {
  margin-bottom: 2rem;
  padding-bottom: 2rem;
  border-bottom: 1px solid #eee;
}

.section:last-child {
  border-bottom: none;
}

.section h2 {
  color: #333;
  margin-bottom: 1rem;
}

.questionContent {
  background: #f8f9fa;
  padding: 1.5rem;
  border-radius: 8px;
  line-height: 2.2; /* 增加行间距 */
  margin-bottom: 1.5em;
}

.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tag {
  background: #eef4ff;
  color: #0052cc;
  padding: 0.3rem 0.8rem;
  border-radius: 20px;
  font-size: 0.9rem;
}

.solutionFlow,
.detailedSolution {
  line-height: 2.2; /* 增加行间距 */
  margin-bottom: 1.5em;
}

.errorReason {
  color: #666;
  font-style: italic;
}

.meta {
  margin-top: 2rem;
  color: #666;
  font-size: 0.9rem;
  text-align: right;
}

/* LaTeX 公式样式 */
.content :global(.katex) {
  font-size: 1.1em;
  padding: 0.2em 0;
  background: #f8f9fa;
  border-radius: 4px;
  margin: 0.3em 0; /* 添加公式的上下外边距 */
}

/* LaTeX 公式样式调整 */
.content :global(.katex-display) {
  margin: 2em 0; /* 增加公式块上下间距 */
  overflow-x: auto; /* 添加水平滚动 */
  overflow-y: hidden;
  max-width: 100%;
  padding: 0.5em 0;
}

/* 使用 :global 包装全局样式 */
.content :global(p) {
  margin: 1.2em 0;
  line-height: 1.8;
}

/* 增加段落和公式的间距 */
.content > * {
  margin: 1.2em 0;
}

/* 给列表项中的内容添加更多间距 */
.content :global(li) {
  margin: 0.8em 0; /* 列表项之间的间距 */
  line-height: 2; /* 列表项内更大的行高 */
}

/* 给列表项中的嵌套内容添加样式 */
.content :global(li p) {
  margin: 0.6em 0;
}

/* 样式化有序列表和无序列表 */
.content :global(ol), .content :global(ul) {
  padding-left: 1.8em;
  margin: 1.2em 0;
}

/* 增加子列表的间距 */
.content :global(li > ul), .content :global(li > ol) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

/* 增加插入线条，分隔不同解法 */
.content :global(h3) {
  position: relative;
}

.content :global(h3)::after {
  content: '';
  display: block;
  width: 100%;
  height: 1px;
  background: #eee;
  margin-top: 0.5em;
}

/* 处理公式过宽的问题 */
.content :global(div.katex-display) {
  width: 100%; /* 确保宽度不超过容器 */
  overflow-x: auto; /* 超出部分显示滚动条 */
  padding: 8px 0; /* 增加上下间距，避免滚动条太靠近内容 */
}

/* 嵌套列表和缩进内容的样式 */
.content :global(li > ul), .content :global(li > p) {
  margin-top: 0.6em;
  margin-left: 1em;
}

/* 处理公式中的等号对齐 */
.content :global(div.katex-display > .katex > .katex-html) {
  padding: 6px 0;
}

.loadingContainer {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: rgba(255, 255, 255, 0.9);
  z-index: 1000;
}

.loadingContainer p {
  margin-top: 1rem;
  color: #666;
  font-size: 1.1rem;
}

.loadingSpinner {
  width: 50px;
  height: 50px;
  border: 4px solid #f3f3f3;
  border-top: 4px solid #0070f3;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 50vh;
  text-align: center;
  padding: 2rem;
}

.errorContainer h2 {
  color: #dc3545;
  margin-bottom: 1rem;
}

.errorContainer p {
  color: #666;
  margin-bottom: 2rem;
}

.errorContainer .backButton {
  margin-top: 1rem;
}

.sectionHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.editButton {
  padding: 0.3rem 0.8rem;
  background: #f0f0f0;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
}

.editButton:hover {
  background: #e0e0e0;
}

.editControls {
  display: flex;
  gap: 0.5rem;
}

.saveButton,
.cancelButton {
  padding: 0.3rem 0.8rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
}

.saveButton {
  background: #0070f3;
  color: white;
}

.saveButton:hover:not(:disabled) {
  background: #0051a2;
}

.saveButton:disabled {
  background: #ccc;
  cursor: not-allowed;
}

.cancelButton {
  background: #f0f0f0;
}

.cancelButton:hover {
  background: #e0e0e0;
}

.editTextarea {
  width: 100%;
  min-height: 150px;
  padding: 1rem;
  border: 1px solid #ddd;
  border-radius: 8px;
  font-family: inherit;
  font-size: 1rem;
  resize: vertical;
}

.knowledgeEdit {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.knowledgeInput {
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
}

.editTag {
  display: inline-flex;
  align-items: center;
  gap: 0.3rem;
  background: #eef4ff;
  color: #0052cc;
  padding: 0.3rem 0.6rem;
  border-radius: 20px;
  font-size: 0.9rem;
}

.removeTag {
  background: none;
  border: none;
  color: #666;
  cursor: pointer;
  padding: 0 0.2rem;
  font-size: 1.1rem;
}

.removeTag:hover {
  color: #dc3545;
}

.deleteButton {
  padding: 0.5rem 1rem;
  background: #dc3545;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.deleteButton:hover {
  background: #c82333;
}

.content.editing {
  padding: 1rem;
  border: 1px solid #ddd;
  border-radius: 8px;
  min-height: 100px;
  outline: none;
  cursor: text;
  background: #fff;
}

.content.editing:focus {
  border-color: #0070f3;
  box-shadow: 0 0 0 2px rgba(0, 112, 243, 0.1);
}

.addKnowledge {
  margin-top: 1rem;
}

.knowledgeInput {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
}

.knowledgeInput:focus {
  border-color: #0070f3;
  outline: none;
  box-shadow: 0 0 0 2px rgba(0, 112, 243, 0.1);
}

.savingIndicator {
  position: fixed;
  bottom: 1rem;
  right: 1rem;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  font-size: 0.9rem;
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}